version: '3.9'

services:

  adminer:
    image: adminer
    restart: always
    networks:
      postgres_net:
      nginx_net:
    depends_on:
      - postgresql
      - nginx

  postgresql:
    container_name: postgresql
    image: postgres
    restart: always
    networks:
      postgres_net:
    volumes:
      - /postgresql/mount:/var/lib/postgresql/data
    env_file:
      - .env.db


  api_server:
    container_name: api_server
    build:
      context: ./backend
      network: host
    restart: always
    volumes:
      - ./backend_static:/online_bank/static
      - ./backend/online_bank/main_app/migrations:/online_bank/main_app/migrations
      - ./currencies.js:/online_bank/currencies.js:ro
    env_file:
      - ./backend/.env
    networks:
      postgres_net:
      nginx_net:
    depends_on:
      - postgresql
      - nginx
    command: python3 online_bank/manage.py runserver 0.0.0.0:8000

  nginx:
    container_name: nginx
    image: nginx
    restart: always
    networks:
      nginx_net:
    volumes:
      - ./backend_static:/online_bank/static
      - ./frontend_static/build:/var/www/build
      - /etc/ssl/wordskillsbank.ru.crt:/etc/ssl/wordskillsbank.ru.crt:ro
      - /etc/ssl/wordskillsbank.ru.key:/etc/ssl/wordskillsbank.ru.key:ro
      - /etc/ssl/ca.crt:/etc/ssl/ca.crt:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 80:80
      - 443:443
      - 8000:8000
      - 8080:8080
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      network: host
    volumes:
      - ./frontend_static/build:/build
    command: npm run build


networks:
  postgres_net:
    name: postgres_net

  nginx_net:
    name: nginx_net

